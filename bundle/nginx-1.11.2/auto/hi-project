if test -n "$1";then
    if test "$1" = "--help" || test "$1" = "-h" ;then
        echo \$1:project name.
        echo -e "\tdefault:demo"
        echo \$2:type:cpp,python or lua
        echo -e "\tdefault:cpp"
        echo \$3:hi\(nginx\) install directory.
        echo -e "\tdefault:/home/centos7/nginx"
        exit
    fi
fi

echo "create hi project."

if test -n "$1";then 
    PROJECT=$1
else 
    PROJECT=demo
fi

if test -n "$2";then
    TYPE=$2
else
    TYPE=cpp
fi

if test -n "$3";then 
    NGINX_INSTALL_DIR=$3
else
    NGINX_INSTALL_DIR=/home/centos7/nginx
fi

echo "create hi project $PROJECT Makefile."

mkdir -pv $PROJECT

cpp_makefile_tpl(){

cat << END                                                     > $PROJECT/Makefile

PROJECT=$PROJECT.so
SRC=\$(wildcard *.cpp)
OBJ=\$(patsubst %.cpp,%.o,\$(SRC))

ifndef NGINX_INSTALL_DIR
NGINX_INSTALL_DIR=/home/centos7/nginx
endif

CXX=g++ 
CXXFLAGS+=-O3 -std=c++11 -fPIC -Wall -I\$(NGINX_INSTALL_DIR)/include
LDLIBS+=
LDFLAGS+=-shared 

all:\$(PROJECT)

\$(PROJECT): \$(OBJ)
	\$(CXX) \$(CXXFLAGS) \$(LDFLAGS)  \$(LDLIBS) -o \$@ \$^

clean:
	rm -f  \$(OBJ) \$(PROJECT)

install:
	test -d \$(NGINX_INSTALL_DIR)/hi || mkdir -p \$(NGINX_INSTALL_DIR)/hi
	install \$(PROJECT) \$(NGINX_INSTALL_DIR)/hi

END


echo "create hi project $PROJECT demo source file."

cat << END                                                     > $PROJECT/$PROJECT.cpp

#include "servlet.hpp"


namespace hi {

    class $PROJECT : public servlet {
    public:

        void handler(request& req, response& res) {
            res.headers.find("Content-Type")->second = "text/plain;charset=UTF-8";
            res.content = "hello,world";
            res.status = 200;
        }

    };
}

extern "C" hi::servlet* create() {
    return new hi::$PROJECT();
}

extern "C" void destroy(hi::servlet* p) {
    delete p;
}

END
}

python_makefile_tpl(){

cat << END                                                     > $PROJECT/Makefile

SRC=\$(wildcard *.py)

ifndef NGINX_INSTALL_DIR
NGINX_INSTALL_DIR=/home/centos7/nginx
endif

all:
	@echo 'ok'

clean:
	@echo 'ok'

install:
	test -d \$(NGINX_INSTALL_DIR)/python || mkdir -p \$(NGINX_INSTALL_DIR)/pyhton
	install \$(SRC) \$(NGINX_INSTALL_DIR)/python

END

echo "create hi project $PROJECT demo source file."

cat << END                                                     > $PROJECT/$PROJECT.py

hi_res.status(200)
hi_res.content('hello,python')


END
}

lua_makefile_tpl(){

cat << END                                                     > $PROJECT/Makefile

SRC=\$(wildcard *.lua)

ifndef NGINX_INSTALL_DIR
NGINX_INSTALL_DIR=/home/centos7/nginx
endif


all:
	@echo 'ok'

clean:
	@echo 'ok'

install:
	test -d \$(NGINX_INSTALL_DIR)/lua || mkdir -p \$(NGINX_INSTALL_DIR)/lua
	install \$(SRC) \$(NGINX_INSTALL_DIR)/lua

END

echo "create hi project $PROJECT demo source file."

cat << END                                                     > $PROJECT/$PROJECT.lua

hi_res:status(200)
hi_res:content('hello,lua')


END

}


case $TYPE in
    cpp) cpp_makefile_tpl;;
    python) python_makefile_tpl;;
    lua) lua_makefile_tpl;;
    *) echo 'Please set TYPE in (cpp,python or lua)';;
esac